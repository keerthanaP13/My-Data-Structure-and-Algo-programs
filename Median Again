import java.util.*;
  import java.io.*;
  
  public class Main {
    public static void main(String args[]) throws IOException {
      
      Scanner sc=new Scanner(System.in);
      int n=sc.nextInt();
      int k=sc.nextInt();
      int arr[]=new int[n];
      for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
      }
      Arrays.sort(arr);
     System.out.println(findMaxMedian(arr, n, k)); 
    }  
      
      static boolean possible(int arr[], int N,
                        int mid, int K)
{
    int add = 0;
 
    for(int i = N / 2 - (N + 1) % 2; 
            i < N; ++i)
    {
        if (mid - arr[i] > 0)
        {
 
            
            add += (mid - arr[i]);
 
            if (add > K)
                return false;
        }
    }
 
    
    if (add <= K)
        return true;
    else
        return false;
}

  static int findMaxMedian(int arr[], int N,
                                    int K)
{
 
   
    int low = 2;
    int mx = 0;
 
    for(int i = 0; i < N; ++i)
    {
        mx = Math.max(mx, arr[i]);
    }
 
    
    int high = K + mx;
 
    while (low <= high) 
    {
        int mid = (high + low) / 2;
 
       
        if (possible(arr, N, mid, K))
        {
            low = mid + 1;
        }
 
        else
        {
            high = mid - 1;
        }
    }
     
    if (N % 2 == 0) 
    {
        if (low - 1 < arr[N / 2])
        {
            return (arr[N / 2] + low - 1) / 2;
        }
    }
     
   
    return low - 1;
}
      
    
  }
